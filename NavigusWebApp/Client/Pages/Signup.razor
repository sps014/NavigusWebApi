@page "/signup"
@using NavigusWebApi.Models
@using NavigusWebApp.Client.Data
@using System.Text.Json
@inject NavigationManager Nav
@inject HttpClient Http

<NavMenu/>
<div class="alert bg-dark m-4">
<div class="login m-4">
          <div class="login-header">
            <h3>Signup</h3>
            <p>Please create your account.</p>
          </div>
        </div>
<div class="login-form">
    <input class="form-control ml-2 my-2" type="text" placeholder="username" @bind-value="username"/>
    <input class="form-control ml-2 my-2" type="email" placeholder="email" @bind-value="email"/>
    <input class="form-control ml-2 my-2" type="password" placeholder="password" @bind-value="password"/>
    <div>
        <label for="role">Choose a Role:</label>
        
        <select class="form-control ml-2 my-2" name="role" id="role" @onchange="Changed">
            <option value="Student">Student</option>
            <option value="Teacher">Teacher</option>
        </select>
    </div>
    @if (!string.IsNullOrWhiteSpace(error))
    {
        <p class="alert alert-danger">
            @error
        </p>
    }
    <button class="btn btn-primary m-3" @onclick="DoSignup">Signup</button>
    <p class="message">Already registered? <a href="/login">Login</a></p>
    
    <p class="m-3">After signup you will be directed to login page</p>
</div>
</div>

@code {
  
    private string error;
    private string email;
    private string password;
    private  string username { get; set; }

    int role = 0;
    async Task DoSignup()
    {
        var res=await Http.PostAsJsonAsync("/Auth/signup",
            new NewUserModel{Email = email,Password = password
                ,Role = (Roles)role,UserName = username});
        
        if (res.IsSuccessStatusCode)
        {
            error = "";
            Nav.NavigateTo("/login");
        }
        else
        {
            error = await res.Content.ReadAsStringAsync();
            StateHasChanged();
        }
    }

    void Changed(ChangeEventArgs e)
    {
        role=(int)Enum.Parse<Roles>(e.Value.ToString());
    }

    public class LoginRes
    {
        public string token { get; set; }
        public int role { get; set; }
    }

}

<style>
    html,body{
        background-image: radial-gradient( circle farthest-corner at 32.7% 82.7%,  rgba(173,0,171,1) 8.3%, rgba(15,51,92,1) 79.4% );
        height:100vh;
    }
</style>