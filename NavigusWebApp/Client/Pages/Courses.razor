@page "/Courses"
@using NavigusWebApp.Client.Data
@using System.Net.Http.Headers
@using NavigusWebApi.Models

@inject HttpClient Http
@inject NavigationManager Nav
<NavMenu></NavMenu>

<div class="container flex-row">

    @foreach (var c in courses)
    {
        <div class="card text-white bg-dark m-3" style="max-width: 18rem;">
            <div class="card-header m-2">@c.CourseId</div>
            <div class="card-body m-2">
                <h5 class="card-title">@c.CourseName</h5>
                @if (CredsData.Role == Roles.Student)
                {
                    <div class="btn btn-primary m-2">Enroll</div>
                }
                else
                {
                    <div class="btn btn-danger m-2">Delete</div>
                    <div class="btn btn-info m-2" @onclick="() => { GoToView(c.CourseId);}">View</div>
                }
            </div>
        </div>

    }
</div>


@code 
{
    List<CourseModel> courses = new List<CourseModel>();
    protected override async Task OnInitializedAsync()
    {
        courses = await FetchAll();
        StateHasChanged();
    }

    async Task<List<CourseModel>> FetchAll()
    {

        Http.DefaultRequestHeaders.Authorization = CredsData.HeaderJWT;
        try
        {
            return await Http.GetFromJsonAsync<List<CourseModel>>("/Course/list");
        }
        catch (Exception _)
        {
            return new List<CourseModel>();
        }
    }

    void GoToView(string id)
    {
        Nav.NavigateTo("/viewcourse/"+id);
    }

}

<style>
    head,body
    {
    background-color: #A9C9FF;
    background-image: linear-gradient(180deg, #A9C9FF 0%, #FFBBEC 100%);
    height: 100vh;
    }
</style>