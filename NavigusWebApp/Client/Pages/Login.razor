@page "/login"
@using NavigusWebApp.Client.Data
@using System.Text.Json
@using NavigusWebApp.Shared.Models
@inject NavigationManager Nav
@inject HttpClient Http

<NavMenu />
<div class="alert bg-dark m-4">
    <div class="login m-4">
        <div class="login-header">
            <h3>LOGIN</h3>
            <p>Please enter your credentials to login.</p>
        </div>
    </div>
    <div class="login-form">
        <input class="form-control ml-2" type="email" placeholder="email" @bind-value="email" />
        <input class="form-control ml-2 mt-4" type="password" placeholder="password" @bind-value="password" />
        @if (!string.IsNullOrWhiteSpace(error))
        {
            <div class="alert alert-danger ml-2">@error</div>
        }
        <button class="btn btn-success ml-2 my-4" @onclick="DoLogin">login</button>
        <p class="message">Not registered? <a href="/signup">Create an account</a></p>
    </div>
</div>
@code
{

    private string error;
    private string email;
    private string password;

    async Task DoLogin()
    {
        var res = await Http.PostAsJsonAsync("/Auth/login",new
         UserModel{ Email = email,Password = password});
        if (res.IsSuccessStatusCode)
        {
            var d = JsonSerializer.Deserialize<LoginRes>(await res.Content.ReadAsStringAsync());
            CredsData.JWT = d.token;
            CredsData.Role = (Roles)d.role;
            CredsData.UserName = d.userName;
            error = "";
            Nav.NavigateTo("/");
        }
        else
        {
            error = await res.Content.ReadAsStringAsync();
            StateHasChanged();
        }
    }

    public class LoginRes
    {
        public string token { get; set; }
        public int role { get; set; }
        public string userName { get; set; }
    }

}

<style>
    html, body {
        background-image: radial-gradient( circle farthest-corner at 32.7% 82.7%, rgba(173,0,171,1) 8.3%, rgba(15,51,92,1) 79.4% );
        height: 100vh;
    }
</style>